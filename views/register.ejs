<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta http-equiv="Cache-Control" content="no-cache, no-store, must-revalidate">
    <meta http-equiv="Pragma" content="no-cache">
    <meta http-equiv="Expires" content="0">
    <title>Register</title>
    <!-- Version 2 - Debug -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css" rel="stylesheet">
    <style>
        .register-container {
            max-width: 400px;
            margin: 100px auto;
        }
    </style>
</head>
<body>
    <div class="container">
        <div class="register-container">
            <div class="card">
                <div class="card-header">
                    <h3 class="text-center">Register</h3>
                </div>
                <div class="card-body">
                    <div id="messageContainer">
                        <!-- Messages will be displayed here -->
                    </div>

                    <!-- Debug info -->
                    <div id="debugInfo" style="display: block;">
                        <p>Current URL: <span id="currentUrl"></span></p>
                        <p>Form Action: <span id="formAction"></span></p>
                    </div>

                    <form id="registerForm" onsubmit="return false;">
                        <div class="mb-3">
                            <label for="fullName" class="form-label">Full Name</label>
                            <input type="text" class="form-control" id="fullName" name="fullName" required>
                        </div>
                        <div class="mb-3">
                            <label for="email" class="form-label">Email address</label>
                            <input type="email" class="form-control" id="email" name="email" required>
                        </div>
                        <div class="mb-3">
                            <label for="password" class="form-label">Password</label>
                            <input type="password" class="form-control" id="password" name="password" required>
                        </div>
                        <button type="button" class="btn btn-primary w-100" id="registerBtn" onclick="registerUser()">Register</button>
                        <button type="button" class="btn btn-secondary w-100 mt-2" onclick="testRegistration()">Test Registration</button>
                    </form>
                    
                    <div class="mt-3 text-center">
                        Already have an account? <a href="/auth/login">Login</a>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js"></script>
    <script>
    // Show debug info
    document.getElementById('currentUrl').textContent = window.location.href;
    document.getElementById('formAction').textContent = document.getElementById('registerForm').action;

    function showMessage(message, type) {
        const container = document.getElementById('messageContainer');
        container.innerHTML = `<div class="alert alert-${type}">${message}</div>`;
    }

    async function registerUser() {
        console.log('registerUser function called');
        
        const fullName = document.getElementById('fullName').value;
        const email = document.getElementById('email').value;
        const password = document.getElementById('password').value;
        const registerBtn = document.getElementById('registerBtn');
        
        console.log('Form values:', { fullName, email, password: password ? '***' : 'empty' });
        
        // Validate inputs
        if (!fullName || !email || !password) {
            showMessage('Please fill in all fields', 'danger');
            return;
        }
        
        // Disable button and show loading
        registerBtn.disabled = true;
        registerBtn.textContent = 'Registering...';
        
        try {
            console.log('Making fetch request to /auth/register');
            
            const response = await fetch('/auth/register', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify({
                    fullName: fullName,
                    email: email,
                    password: password
                })
            });
            
            console.log('Response received:', response);
            console.log('Response status:', response.status);
            
            if (response.ok) {
                const result = await response.json();
                console.log('Registration successful:', result);
                showMessage(result.message || 'Registration successful! You can now log in.', 'success');
                
                // Redirect to homepage after 2 seconds
                setTimeout(() => {
                    window.location.href = '/';
                }, 2000);
            } else {
                const errorData = await response.json();
                console.log('Registration failed:', errorData);
                showMessage(errorData.error || 'Registration failed. Please try again.', 'danger');
            }
        } catch (error) {
            console.error('Registration error:', error);
            showMessage('Network error. Please try again.', 'danger');
        } finally {
            // Re-enable button
            registerBtn.disabled = false;
            registerBtn.textContent = 'Register';
        }
    }

    async function testRegistration() {
        const testEmail = 'test' + Date.now() + '@example.com';
        const testData = {
            fullName: 'Test User',
            email: testEmail,
            password: 'password123'
        };
        
        try {
            console.log('Testing registration with:', testData);
            
            const response = await fetch('/auth/register', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify(testData)
            });
            
            if (response.ok) {
                const result = await response.json();
                showMessage(`Test registration successful! User ID: ${result.userId}`, 'success');
            } else {
                const errorData = await response.json();
                showMessage(`Test failed: ${errorData.error}`, 'danger');
            }
        } catch (error) {
            console.error('Test registration error:', error);
            showMessage('Test failed: ' + error.message, 'danger');
        }
    }
    </script>
</body>
</html> 